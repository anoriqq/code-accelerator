{"version":3,"sources":["extension.js"],"names":["window","workspace","commands","Disposable","require","throttle","sum","configuration","getConfiguration","COMMANDS","INFO","RESET","ALERT_MESSAGE","MESSAGE_ITEMS","CANCEL","TITLE","MESSAGE","RESOLVED","WAIT","get","NUMBER_OF_SECTIONS","THRESHOLD","module","exports","activate","subscriptions","counter","Counter","push","CounterController","registerCommand","showInformationMessage","stackPoints","init","deactivate","constructor","latestStatus","Array","fill","isActiveSection","interval","clearInterval","updateStackPoints","setInterval","checkSectionStatus","activateSection","inactivateSection","pushActiveStatus","shift","pushInactiveStatus","_this","alert","items","Object","keys","map","key","selection","_counter","_onEvent","trailing","onDidChangeActiveTextEditor","onDidChangeTextDocument","_disposable","from"],"mappings":";AAAA,MAAM,OAAEA,EAAF,UAAUC,EAAV,SAAqBC,EAArB,WAA+BC,GAAeC,QAAQ,WACtD,SAAEC,EAAF,IAAYC,GAAQF,QAAQ,UAC5BG,EAAgBN,EAAUO,iBAAiB,oBAE3CC,EAAW,CACfC,KAAM,wBACNC,MAAO,0BAEHC,EAAgB,0BAChBC,EAAgB,CACpBC,OAAQ,CACNC,MAAO,OACPC,QAAS,WAEXC,SAAU,CACRF,MAAO,OACPC,QAAS,WAGPE,EAAO,IAAOX,EAAcY,IAAI,oBAChCC,EAAqBb,EAAcY,IAAI,oBACvCE,EAAYd,EAAcY,IAAI,kBAEpCG,OAAOC,QAAQC,SAAW,UAAS,cAAEC,IAC7BC,MAAAA,EAAU,IAAIC,EACpBF,EAAcG,KAAKF,GACnBD,EAAcG,KAAK,IAAIC,EAAkBH,IAEzCD,EAAcG,KACZ1B,EAAS4B,gBAAgBrB,EAASC,KAAM,KACtCV,EAAO+B,0CACcL,EAAQM,iBAAiBX,QAKlDI,EAAcG,KACZ1B,EAAS4B,gBAAgBrB,EAASE,MAAO,KACvCe,EAAQO,OACRjC,EAAO+B,uBAAwB,0BAKrCT,OAAOC,QAAQW,WAAa,aAE5B,MAAMP,EACJQ,cACOC,KAAAA,aAAe,IAAIC,MAAMjB,GAAoBkB,KAAK,GAClDN,KAAAA,YAAc1B,EAAI,KAAK8B,cACvBG,KAAAA,iBAAkB,EAClBC,KAAAA,SAAW,KAEXP,KAAAA,OAGPA,OACM,KAAKO,UAAUC,cAAc,KAAKD,UACjCJ,KAAAA,aAAaE,KAAK,GAClBI,KAAAA,oBACAF,KAAAA,SAAWG,YAAY,KAAKC,mBAAoB1B,EAAM,MAG7D2B,kBACON,KAAAA,iBAAkB,EAGzBO,oBACOP,KAAAA,iBAAkB,EAGzBQ,mBACOX,KAAAA,aAAaY,QACbZ,KAAAA,aAAaR,KAAK,GAClBc,KAAAA,oBAGPO,qBACOb,KAAAA,aAAaY,QACbZ,KAAAA,aAAaR,KAAK,GAClBc,KAAAA,oBAGPA,oBACOV,KAAAA,YAAc1B,EAAI,KAAK8B,cAG9BQ,mBAAmBM,GACbA,EAAMX,gBAAiBW,EAAMH,mBAC5BG,EAAMD,qBACXC,EAAMJ,oBAEFI,EAAMlB,aAAeX,GAAW6B,EAAMC,QAGtCA,cACEC,MAAAA,EAAQC,OAAOC,KAAKzC,GAAe0C,IAAIC,GACpC3C,EAAc2C,GAAKzC,OAEtB0C,QAAkBzD,EAAO+B,uBAC7BnB,KACGwC,GAEA,IAAA,MAAMI,KAAOH,OAAOC,KAAKzC,GACxBA,GAAAA,EAAc2C,GAAKzC,QAAU0C,EAE/B,YADAzD,EAAO+B,uBAAuBlB,EAAc2C,GAAKxC,UAOzD,MAAMa,EACJM,YAAYT,GACLgC,KAAAA,SAAWhC,EAEZD,IAAAA,EAAgB,GACfkC,KAAAA,SAAWtD,EAAS,KAAKwC,gBAAiB3B,EAAM,CACnD0C,UAAU,IAEZ5D,EAAO6D,4BAA4B,KAAKF,SAAU,KAAMlC,GACxDxB,EAAU6D,wBAAwB,KAAKH,SAAU,KAAMlC,GAElDsC,KAAAA,YAAc5D,EAAW6D,QAAQvC,GAGxCoB,kBACOa,KAAAA,SAASb","file":"extension.js","sourceRoot":"..","sourcesContent":["const { window, workspace, commands, Disposable } = require(\"vscode\");\nconst { throttle, sum } = require(\"lodash\");\nconst configuration = workspace.getConfiguration(\"code-accelerator\");\n\nconst COMMANDS = {\n  INFO: \"code-accelerator.info\",\n  RESET: \"code-accelerator.reset\"\n};\nconst ALERT_MESSAGE = \"つまずいていることがあれば､誰かに相談しよう!\";\nconst MESSAGE_ITEMS = {\n  CANCEL: {\n    TITLE: \"問題ない\",\n    MESSAGE: \"Great!!\"\n  },\n  RESOLVED: {\n    TITLE: \"解決した\",\n    MESSAGE: \"Cool!!\"\n  }\n};\nconst WAIT = 1000 * configuration.get(\"waitTimeRangeSec\");\nconst NUMBER_OF_SECTIONS = configuration.get(\"numberOfSections\");\nconst THRESHOLD = configuration.get(\"alertThreshold\");\n\nmodule.exports.activate = function({ subscriptions }) {\n  const counter = new Counter();\n  subscriptions.push(counter);\n  subscriptions.push(new CounterController(counter));\n\n  subscriptions.push(\n    commands.registerCommand(COMMANDS.INFO, () => {\n      window.showInformationMessage(\n        `Stack points is ${counter.stackPoints} / ${THRESHOLD}`\n      );\n    })\n  );\n\n  subscriptions.push(\n    commands.registerCommand(COMMANDS.RESET, () => {\n      counter.init();\n      window.showInformationMessage(`Stack points reset`);\n    })\n  );\n};\n\nmodule.exports.deactivate = function() {};\n\nclass Counter {\n  constructor() {\n    this.latestStatus = new Array(NUMBER_OF_SECTIONS).fill(0);\n    this.stackPoints = sum(this.latestStatus);\n    this.isActiveSection = false;\n    this.interval = null;\n\n    this.init();\n  }\n\n  init() {\n    if (this.interval) clearInterval(this.interval);\n    this.latestStatus.fill(0);\n    this.updateStackPoints();\n    this.interval = setInterval(this.checkSectionStatus, WAIT, this);\n  }\n\n  activateSection() {\n    this.isActiveSection = true;\n  }\n\n  inactivateSection() {\n    this.isActiveSection = false;\n  }\n\n  pushActiveStatus() {\n    this.latestStatus.shift();\n    this.latestStatus.push(0);\n    this.updateStackPoints();\n  }\n\n  pushInactiveStatus() {\n    this.latestStatus.shift();\n    this.latestStatus.push(1);\n    this.updateStackPoints();\n  }\n\n  updateStackPoints() {\n    this.stackPoints = sum(this.latestStatus);\n  }\n\n  checkSectionStatus(_this) {\n    if (_this.isActiveSection) _this.pushActiveStatus();\n    else _this.pushInactiveStatus();\n    _this.inactivateSection();\n\n    if (_this.stackPoints >= THRESHOLD) _this.alert();\n  }\n\n  async alert() {\n    const items = Object.keys(MESSAGE_ITEMS).map(key => {\n      return MESSAGE_ITEMS[key].TITLE;\n    });\n    const selection = await window.showInformationMessage(\n      ALERT_MESSAGE,\n      ...items\n    );\n    for (const key of Object.keys(MESSAGE_ITEMS)) {\n      if (MESSAGE_ITEMS[key].TITLE === selection) {\n        window.showInformationMessage(MESSAGE_ITEMS[key].MESSAGE);\n        return;\n      }\n    }\n  }\n}\n\nclass CounterController {\n  constructor(counter) {\n    this._counter = counter;\n\n    let subscriptions = [];\n    this._onEvent = throttle(this.activateSection, WAIT, {\n      trailing: false\n    });\n    window.onDidChangeActiveTextEditor(this._onEvent, this, subscriptions);\n    workspace.onDidChangeTextDocument(this._onEvent, this, subscriptions);\n\n    this._disposable = Disposable.from(...subscriptions);\n  }\n\n  activateSection() {\n    this._counter.activateSection();\n  }\n}\n"]}